{"version":3,"sources":["webpack:///./src/components/hero.module.css","webpack:///./src/components/article-preview.module.css","webpack:///./src/components/hero.js","webpack:///./src/pages/index.js","webpack:///./src/components/article-preview.js"],"names":["module","exports","data","className","styles","hero","heroImage","alt","name","fluid","heroDetails","heroTitle","title","shortBio","pageQuery","RootIndex","location","siteTitle","site","siteMetadata","posts","allContentfulBlogPost","edges","author","allContentfulPerson","style","background","node","map","key","slug","article","preview","previewTitle","to","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","tags","tag"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,YAAc,kCAAkC,UAAY,kC,uBCA5JD,EAAOC,QAAU,CAAC,aAAe,8CAA8C,IAAM,uC,uLCItE,kBAAGC,EAAH,EAAGA,KAAH,OACb,yBAAKC,UAAWC,IAAOC,MACrB,kBAAC,IAAD,CACEF,UAAWC,IAAOE,UAClBC,IAAKL,EAAKM,KACVC,MAAOP,EAAKI,UAAUG,QAExB,yBAAKN,UAAWC,IAAOM,aACrB,uBAAGP,UAAWC,IAAOO,WAAYT,EAAKU,OACtC,2BAAIV,EAAKW,SAASA,a,wBCsBXC,GAFEC,UA3BG,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,KAAMc,EAAe,EAAfA,SACjBC,EAAYf,EAAKgB,KAAKC,aAAaP,MACnCQ,EAAQlB,EAAKmB,sBAAsBC,MAClCC,EAAUrB,EAAKsB,oBAAoBF,MAHJ,GAKtC,OACE,kBAAC,IAAD,CAAQN,SAAUA,GAChB,yBAAKS,MAAO,CAAEC,WAAY,SACxB,kBAAC,IAAD,CAAQd,MAAOK,IACf,kBAAC,EAAD,CAAMf,KAAMqB,EAAOI,OACnB,yBAAKxB,UAAU,WACb,wBAAIA,UAAU,oBAAd,gBACA,wBAAIA,UAAU,gBACXiB,EAAMQ,KAAI,YAAe,IAAZD,EAAW,EAAXA,KACZ,OACE,wBAAIE,IAAKF,EAAKG,MACZ,kBAAC,IAAD,CAAgBC,QAASJ,aAavB,e,kCCpCtB,+EAMe,oBAAGI,EAAH,EAAGA,QAAH,OACb,yBAAK5B,UAAWC,IAAO4B,SACrB,kBAAC,IAAD,CAAKzB,IAAI,GAAGE,MAAOsB,EAAQzB,UAAUG,QACrC,wBAAIN,UAAWC,IAAO6B,cACpB,kBAAC,IAAD,CAAMC,GAAE,SAAWH,EAAQD,MAASC,EAAQnB,QAE9C,+BAAQmB,EAAQI,aAChB,yBACEC,wBAAyB,CACvBC,OAAQN,EAAQO,YAAYC,oBAAoBC,QAGnDT,EAAQU,MACPV,EAAQU,KAAKb,KAAI,SAAAc,GAAG,OAClB,uBAAGvC,UAAWC,IAAOsC,IAAKb,IAAKa,GAC5BA","file":"component---src-pages-index-js-b3931c2a437b175aa7ee.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"hero-module--hero--S__gH\",\"heroImage\":\"hero-module--heroImage--DciWV\",\"heroDetails\":\"hero-module--heroDetails--3uv8x\",\"heroTitle\":\"hero-module--heroTitle--2LulU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewTitle\":\"article-preview-module--previewTitle--16pYm\",\"tag\":\"article-preview-module--tag--27JAs\"};","import React from 'react'\nimport Img from 'gatsby-image'\n\nimport styles from './hero.module.css'\n\nexport default ({ data }) => (\n  <div className={styles.hero}>\n    <Img\n      className={styles.heroImage}\n      alt={data.name}\n      fluid={data.heroImage.fluid}\n    />\n    <div className={styles.heroDetails}>\n      <p className={styles.heroTitle}>{data.title}</p>\n      <p>{data.shortBio.shortBio}</p>\n    </div>\n  </div>\n)\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Helmet from 'react-helmet';\nimport Hero from '../components/hero';\nimport Layout from '../components/layout';\nimport ArticlePreview from '../components/article-preview';\n\nconst RootIndex = ({ data, location }) => {\n    const siteTitle = data.site.siteMetadata.title; \n    const posts = data.allContentfulBlogPost.edges;\n    const [author] = data.allContentfulPerson.edges;\n\n    return (\n      <Layout location={location}>\n        <div style={{ background: '#eee' }}>\n          <Helmet title={siteTitle} />\n          <Hero data={author.node} />\n          <div className=\"wrapper\">\n            <h2 className=\"section-headline\">Recent Posts</h2>\n            <ul className=\"article-list\">\n              {posts.map(({ node }) => {\n                return (\n                  <li key={node.slug}>\n                    <ArticlePreview article={node} />\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      edges {\n        node {\n          title\n          slug\n          publishDate(formatString: \"MMMM Do, YYYY\")\n          tags\n          heroImage {\n            fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\n              ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n          description {\n            childMarkdownRemark {\n              html\n            }\n          }\n        }\n      }\n    }\n    allContentfulPerson(\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\n    ) {\n      edges {\n        node {\n          name\n          shortBio {\n            shortBio\n          }\n          title\n          heroImage: image {\n            fluid(\n              maxWidth: 1180\n              maxHeight: 480\n            ) {\n              ...GatsbyContentfulFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport styles from './article-preview.module.css'\n\nexport default ({ article }) => (\n  <div className={styles.preview}>\n    <Img alt=\"\" fluid={article.heroImage.fluid} />\n    <h3 className={styles.previewTitle}>\n      <Link to={`/blog/${article.slug}`}>{article.title}</Link>\n    </h3>\n    <small>{article.publishDate}</small>\n    <div\n      dangerouslySetInnerHTML={{\n        __html: article.description.childMarkdownRemark.html,\n      }}\n    />\n    {article.tags &&\n      article.tags.map(tag => (\n        <p className={styles.tag} key={tag}>\n          {tag}\n        </p>\n      ))}\n  </div>\n)\n"],"sourceRoot":""}