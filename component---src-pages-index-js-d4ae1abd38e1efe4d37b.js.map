{"version":3,"sources":["webpack:///./src/components/hero.module.css","webpack:///./src/components/article-preview.module.css","webpack:///./src/components/hero.js","webpack:///./src/pages/index.js","webpack:///./src/components/article-preview.js"],"names":["module","exports","data","className","styles","hero","heroImage","alt","name","fluid","heroDetails","heroTitle","title","shortBio","pageQuery","RootIndex","location","siteTitle","site","siteMetadata","posts","allContentfulBlogPost","edges","author","allContentfulPerson","style","background","node","map","key","slug","article","preview","previewTitle","to","publishDate","dangerouslySetInnerHTML","__html","description","childMarkdownRemark","html","tags","tag"],"mappings":"gFACAA,EAAOC,QAAU,CAAC,KAAO,2BAA2B,UAAY,gCAAgC,YAAc,kCAAkC,UAAY,kC,uBCA5JD,EAAOC,QAAU,CAAC,aAAe,8CAA8C,IAAM,uC,uLCItE,kBAAGC,EAAH,EAAGA,KAAH,OACb,yBAAKC,UAAWC,IAAOC,MACrB,kBAAC,IAAD,CACEF,UAAWC,IAAOE,UAClBC,IAAKL,EAAKM,KACVC,MAAOP,EAAKI,UAAUG,QAExB,yBAAKN,UAAWC,IAAOM,aACrB,uBAAGP,UAAWC,IAAOO,WAAYT,EAAKU,OACtC,2BAAIV,EAAKW,SAASA,a,wBCsBXC,GAFEC,UA3BG,SAAC,GAAwB,IAAtBb,EAAqB,EAArBA,KAAMc,EAAe,EAAfA,SACjBC,EAAYf,EAAKgB,KAAKC,aAAaP,MACnCQ,EAAQlB,EAAKmB,sBAAsBC,MAClCC,EAAUrB,EAAKsB,oBAAoBF,MAHJ,GAKtC,OACE,kBAAC,IAAD,CAAQN,SAAUA,GAChB,yBAAKS,MAAO,CAAEC,WAAY,SACxB,kBAAC,IAAD,CAAQd,MAAOK,IACf,kBAAC,EAAD,CAAMf,KAAMqB,EAAOI,OACnB,yBAAKxB,UAAU,WACb,wBAAIA,UAAU,oBAAd,gBACA,wBAAIA,UAAU,gBACXiB,EAAMQ,KAAI,YAAe,IAAZD,EAAW,EAAXA,KACZ,OACE,wBAAIE,IAAKF,EAAKG,MACZ,kBAAC,IAAD,CAAgBC,QAASJ,aAavB,e,kCCpCtB,+EAMe,oBAAGI,EAAH,EAAGA,QAAH,OACb,yBAAK5B,UAAWC,IAAO4B,SACrB,kBAAC,IAAD,CAAKzB,IAAI,GAAGE,MAAOsB,EAAQzB,UAAUG,QACrC,wBAAIN,UAAWC,IAAO6B,cACpB,kBAAC,IAAD,CAAMC,GAAE,SAAWH,EAAQD,MAASC,EAAQnB,QAE9C,+BAAQmB,EAAQI,aAChB,yBACEC,wBAAyB,CACvBC,OAAQN,EAAQO,YAAYC,oBAAoBC,QAGnDT,EAAQU,MACPV,EAAQU,KAAKb,KAAI,SAAAc,GAAG,OAClB,uBAAGvC,UAAWC,IAAOsC,IAAKb,IAAKa,GAC5BA","file":"component---src-pages-index-js-d4ae1abd38e1efe4d37b.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hero\":\"hero-module--hero--35EwX\",\"heroImage\":\"hero-module--heroImage--vbnMA\",\"heroDetails\":\"hero-module--heroDetails--1gifn\",\"heroTitle\":\"hero-module--heroTitle--2aT9T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewTitle\":\"article-preview-module--previewTitle--dtVfR\",\"tag\":\"article-preview-module--tag--1jiS7\"};","import React from 'react'\r\nimport Img from 'gatsby-image'\r\n\r\nimport styles from './hero.module.css'\r\n\r\nexport default ({ data }) => (\r\n  <div className={styles.hero}>\r\n    <Img\r\n      className={styles.heroImage}\r\n      alt={data.name}\r\n      fluid={data.heroImage.fluid}\r\n    />\r\n    <div className={styles.heroDetails}>\r\n      <p className={styles.heroTitle}>{data.title}</p>\r\n      <p>{data.shortBio.shortBio}</p>\r\n    </div>\r\n  </div>\r\n)\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Helmet from 'react-helmet';\r\nimport Hero from '../components/hero';\r\nimport Layout from '../components/layout';\r\nimport ArticlePreview from '../components/article-preview';\r\n\r\nconst RootIndex = ({ data, location }) => {\r\n    const siteTitle = data.site.siteMetadata.title; \r\n    const posts = data.allContentfulBlogPost.edges;\r\n    const [author] = data.allContentfulPerson.edges;\r\n\r\n    return (\r\n      <Layout location={location}>\r\n        <div style={{ background: '#fff' }}>\r\n          <Helmet title={siteTitle} />\r\n          <Hero data={author.node} />\r\n          <div className=\"wrapper\">\r\n            <h2 className=\"section-headline\">Recent Posts</h2>\r\n            <ul className=\"article-list\">\r\n              {posts.map(({ node }) => {\r\n                return (\r\n                  <li key={node.slug}>\r\n                    <ArticlePreview article={node} />\r\n                  </li>\r\n                )\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\nexport default RootIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query HomeQuery {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\r\n      edges {\r\n        node {\r\n          title\r\n          slug\r\n          publishDate(formatString: \"MMMM Do, YYYY\")\r\n          tags\r\n          heroImage {\r\n            fluid(maxWidth: 350, maxHeight: 196, resizingBehavior: SCALE) {\r\n              ...GatsbyContentfulFluid_tracedSVG\r\n            }\r\n          }\r\n          description {\r\n            childMarkdownRemark {\r\n              html\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    allContentfulPerson(\r\n      filter: { contentful_id: { eq: \"15jwOBqpxqSAOy2eOO4S0m\" } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          name\r\n          shortBio {\r\n            shortBio\r\n          }\r\n          title\r\n          heroImage: image {\r\n            fluid(\r\n              maxWidth: 1180\r\n              maxHeight: 480\r\n            ) {\r\n              ...GatsbyContentfulFluid_tracedSVG\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Img from 'gatsby-image'\r\n\r\nimport styles from './article-preview.module.css'\r\n\r\nexport default ({ article }) => (\r\n  <div className={styles.preview}>\r\n    <Img alt=\"\" fluid={article.heroImage.fluid} />\r\n    <h3 className={styles.previewTitle}>\r\n      <Link to={`/blog/${article.slug}`}>{article.title}</Link>\r\n    </h3>\r\n    <small>{article.publishDate}</small>\r\n    <div\r\n      dangerouslySetInnerHTML={{\r\n        __html: article.description.childMarkdownRemark.html,\r\n      }}\r\n    />\r\n    {article.tags &&\r\n      article.tags.map(tag => (\r\n        <p className={styles.tag} key={tag}>\r\n          {tag}\r\n        </p>\r\n      ))}\r\n  </div>\r\n)\r\n"],"sourceRoot":""}